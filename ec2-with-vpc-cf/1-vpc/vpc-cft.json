{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "",
  "Metadata": {},
  "Parameters": {
    "SSHCidr": {
      "Description": "CIDR IP range allowed to login to the NAT instance",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "WebCidr": {
      "Description": "CIDR IP range allowed to access webserver on port 80",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "KeyPairName": {
      "Description": "Name of an existing EC2 KeyPair",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    }
  },
  "Mappings": {
    "NatRegionMap": {
      "ap-south-1": { "AMI": "ami-0eeb03e72075b9bcc" }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.1.0.0/16",
        "Tags": [
          {
            "Key": "env",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-VPC"]] }
          }
        ]
      }
    },
    "IGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-IGW"]] }
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "InternetGatewayId": { "Ref": "IGateway" }
      }
    },
    "PublicSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": "10.1.10.0/24",
        "Tags": [
          {
            "Key": "env",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-Public-A"]]
            }
          }
        ]
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "Public" }]
      }
    },
    "PublicRoute1": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "PublicRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "IGateway" }
      }
    },
    "PublicSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PublicSubnetA" },
        "RouteTableId": { "Ref": "PublicRouteTable" }
      }
    },
    "PrivateSubnetA": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },
        "VpcId": { "Ref": "VPC" },
        "CidrBlock": "10.1.50.0/24",
        "Tags": [
          {
            "Key": "env",
            "Value": "dev"
          },
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": ["", [{ "Ref": "AWS::StackName" }, "-Private-A"]]
            }
          }
        ]
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "Tags": [{ "Key": "Name", "Value": "Private" }]
      }
    },
    "PrivateRoute1": {
      "Type": "AWS::EC2::Route",
      "DependsOn": ["PrivateRouteTable", "NAT"],
      "Properties": {
        "RouteTableId": { "Ref": "PrivateRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": { "Ref": "NAT" }
      }
    },
    "PrivateSubnetARouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "PrivateSubnetA" },
        "RouteTableId": { "Ref": "PrivateRouteTable" }
      }
    },
    "NATEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "NAT"
        }
      }
    },
    "NAT": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": "t2.micro",
        "SourceDestCheck": "false",
        "KeyName": { "Ref": "KeyPairName" },
        "ImageId": {
          "Fn::FindInMap": ["NatRegionMap", { "Ref": "AWS::Region" }, "AMI"]
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [{ "Ref": "NatSecurityGroup" }],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": { "Ref": "PublicSubnetA" }
          }
        ],
        "Tags": [{ "Key": "Name", "Value": "NAT" }],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "yum update -y && yum install -y yum-cron && chkconfig yum-cron on"
              ]
            ]
          }
        }
      }
    },
    "NatSecurityGroup": {
      "DependsOn": ["VPC"],
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "NAT Security Group",
        "VpcId": { "Ref": "VPC" },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SSHCidr" }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": { "Ref": "WebCidr" }
          }
        ],
        "Tags": [{ "Key": "Name", "Value": "NAT Security Group" }]
      }
    },

    "NatSecurityGroupIngress22": {
      "DependsOn": ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "NatSecurityGroup" },
        "IpProtocol": "tcp",
        "FromPort": "22",
        "ToPort": "22",
        "SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    },

    "NatSecurityGroupIngress80": {
      "DependsOn": ["NatSecurityGroup"],
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": { "Ref": "NatSecurityGroup" },
        "IpProtocol": "tcp",
        "FromPort": "80",
        "ToPort": "80",
        "SourceSecurityGroupId": { "Ref": "NatSecurityGroup" }
      }
    }
  },
  "Outputs": {
    "VPC": {
      "Description": "VPC",
      "Value": { "Ref": "VPC" },
      "Export": {
        "Name": "VPC"
      }
    },
    "PrivateSubnetA": {
      "Description": "Private Subnet A",
      "Value": { "Ref": "PrivateSubnetA" },
      "Export": {
        "Name": "PrivateSubnetA"
      }
    },
    "PublicSubnetA": {
      "Description": "Public Subnet A",
      "Value": { "Ref": "PublicSubnetA" },
      "Export": {
        "Name": "PublicSubnetA"
      }
    }
  }
}
